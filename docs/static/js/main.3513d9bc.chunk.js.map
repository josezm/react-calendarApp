{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventSetNonActive","eventUpdate","deleteEvent","eventLoaded","startLogout","dispatch","setItem","logout","checkingFinish","login","user","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rConfirm","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","Date","getTime","uid","error","msg","Swal","fire","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowplusone","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","notes","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","overlayClassName","isOpen","onRequestClose","style","contentLabel","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","background","_id","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3513d9bc.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpoint}`;\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url);\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n   const url = `${baseUrl}/${endpoint}`;\r\n   const token = localStorage.getItem('token') || '';\r\n\r\n   if (method === 'GET') {\r\n      return fetch(url,{\r\n         method: method,\r\n         headers: {\r\n            'x-token' : token,\r\n         }\r\n      });\r\n   } else {\r\n      return fetch(url, {\r\n         method,\r\n         headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token,\r\n         },\r\n         body: JSON.stringify(data),\r\n      });\r\n   }\r\n\r\n}\r\n\r\n\r\nexport {\r\n   fetchSinToken,\r\n   fetchConToken\r\n}","export const types = {\r\n   uiOpenModal : '[ui] Open Modal',\r\n   uiCloseModal : '[ui] Close Modal',\r\n\r\n   eventAddNew: '[event] Add New',\r\n   eventStartAddNew : '[event] Start Add New',\r\n   eventSetActive: '[event] Set Active',\r\n   eventSetNonActive: '[event] Set Non Active',\r\n   eventUpdate: '[event] Update Event',\r\n   eventDelete: '[event] Delete Event',\r\n   eventLoaded: '[event] Loaded Event',\r\n   eventPurge: '[event] Purge Event',\r\n\r\n   authCheckingFinish : '[auth] Finish checking login state',\r\n   authStartLogin : '[auth] Start login',\r\n   authLogin : '[auth] Login',\r\n   authStartRegister : '[auth] Start Register',\r\n   authStartTokenRenew : '[auth] Start Token Renew',\r\n   authLogout : '[auth] Logout',\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = [])=>{\r\n   return events.map( event =>{\r\n      return {\r\n         ...event,\r\n         end: moment(event.end).toDate(),\r\n         start : moment(event.start).toDate()\r\n      }\r\n   })\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = (event) => {\r\n   return async(dispatch, getState) =>{\r\n      const {uid,name} = getState().auth;\r\n      try {\r\n         const resp = await fetchConToken('events', event, 'POST');\r\n         const body = await resp.json();\r\n         if(body.ok){\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n               uid,\r\n               name,\r\n            }\r\n            dispatch(eventAddNew(event));\r\n         }\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nconst eventAddNew = (event)=>{\r\n   return {\r\n      type: types.eventAddNew,\r\n      payload : event\r\n   }\r\n}\r\n\r\nexport const eventSetActive = (event)=>{\r\n   return {\r\n      type: types.eventSetActive,\r\n      payload : event\r\n   }\r\n}\r\n\r\nexport const eventSetNonActive = (event)=>{\r\n   return {\r\n      type: types.eventSetActive,\r\n      payload : event\r\n   }\r\n}\r\n\r\nexport const startEventUpdate = (event) => {\r\n   return async(dispatch) =>{\r\n      try {\r\n         const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n         const body = await resp.json();\r\n         if(body.ok){\r\n            dispatch(eventUpdate(event));\r\n         }\r\n         else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nconst eventUpdate = (event)=>{\r\n   return {\r\n      type: types.eventUpdate,\r\n      payload : event,\r\n   }\r\n}\r\n\r\nexport const startDeleteEvent = (event) => {\r\n   return async(dispatch, getState) =>{\r\n      const {id} = getState().calendar.activeEvent;\r\n      try {\r\n         const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n         const body = await resp.json();\r\n         if(body.ok){\r\n            dispatch(deleteEvent(event));\r\n         }\r\n         else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nconst deleteEvent = () =>{\r\n   return{\r\n      type: types.eventDelete,\r\n   }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n   return  async(dispatch) =>{\r\n      try {\r\n         const resp = await fetchConToken('events',{},'GET');\r\n         const body = await resp.json();\r\n         if(body.ok){\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events));\r\n         }else{\r\n            Swal.fire('Error', 'Unespected error, please reload the page', 'error');\r\n         }\r\n      } catch (error) {\r\n         console.log(error)\r\n      }\r\n   }\r\n}\r\n\r\nconst eventLoaded = (events) => {\r\n   return {\r\n      type:types.eventLoaded,\r\n      payload: events\r\n   }\r\n}\r\n\r\nexport const eventPurge = () =>{\r\n   return {\r\n      type: types.eventPurge\r\n   }\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport {eventPurge} from './events'\r\n\r\nexport const startLogin = (email, password) => {\r\n   return async (dispatch) => {\r\n\r\n      const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n         dispatch(login({ uid: body.uid, name: body.name }))\r\n      }\r\n      else {\r\n         let error = body.msg;\r\n         if (body.error) {\r\n            error = body.error.email ? body.error.email.msg : body.error.password.msg;\r\n         }\r\n         Swal.fire('Error', error, 'error');\r\n      }\r\n   }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n         dispatch(login({ uid: body.uid, name: body.name }))\r\n\r\n      }\r\n      else {\r\n         let error = body.msg;\r\n         if (body.error) {\r\n            error = body.error.email ? body.error.email.msg : body.error.password.msg;\r\n         }\r\n         Swal.fire('Error', error, 'error');\r\n      }\r\n   }\r\n}\r\n\r\nexport const startChecking = () => {\r\n   return async (dispatch) => {\r\n      const resp = await fetchConToken('auth/renew', {});\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n         localStorage.setItem('token', body.token);\r\n         localStorage.setItem('token-init-date', new Date().getTime());\r\n         dispatch(login({ uid: body.uid, name: body.name }))\r\n\r\n      }\r\n      else {\r\n         dispatch(checkingFinish());\r\n      }\r\n   }\r\n}\r\n\r\nexport const startLogout = () => {\r\n   return (dispatch)=>{\r\n      localStorage.setItem('token', '');\r\n      \r\n      dispatch(logout());\r\n      dispatch(eventPurge());\r\n   }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n   return {\r\n      type: types.authCheckingFinish,\r\n   }\r\n}\r\n\r\nconst login = (user) => {\r\n   return {\r\n      type: types.authLogin,\r\n      payload: user\r\n   }\r\n}\r\n\r\nconst logout = () => {\r\n   return{\r\n      type: types.authLogout\r\n   }\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [formLoginValues, handleLoginInputChange] = useForm({\r\n\t\tlEmail: '',\r\n\t\tlPassword: ''\r\n\t});\r\n\r\n\tconst {lEmail, lPassword} = formLoginValues;\r\n\r\n\tconst handleLogin = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startLogin(lEmail,lPassword));\r\n\t}\r\n\r\n\tconst [formRegisterValues, handleRegisterInputChange] = useForm({\r\n\t\trName: '',\r\n\t\trEmail: '',\r\n\t\trPassword: '',\r\n\t\trConfirm: ''\r\n\t});\r\n\r\n\tconst {rName,rEmail,rPassword,rConfirm} = formRegisterValues;\r\n\r\n\tconst handleRegister = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(rPassword !== rConfirm){\r\n\t\t\treturn Swal.fire('Error', 'The password must be equal', 'error');\r\n\t\t}\r\n\t\tdispatch(startRegister(rName,rEmail,rPassword));\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container login-container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6 login-form-1\">\r\n\t\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t\t<form onSubmit = {handleLogin}>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\tname = \"lEmail\"\r\n\t\t\t\t\t\t\t\tvalue = {lEmail}\r\n\t\t\t\t\t\t\t\tonChange = {handleLoginInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tname = \"lPassword\"\r\n\t\t\t\t\t\t\t\tvalue = {lPassword}\r\n\t\t\t\t\t\t\t\tonChange = {handleLoginInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Login\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-6 login-form-2\">\r\n\t\t\t\t\t<h3>Register</h3>\r\n\t\t\t\t\t<form onSubmit = {handleRegister}>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Nombre\"\r\n\t\t\t\t\t\t\t\tvalue={rName}\r\n\t\t\t\t\t\t\t\tname = 'rName'\r\n\t\t\t\t\t\t\t\tonChange = { handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Correo\"\r\n\t\t\t\t\t\t\t\tvalue={rEmail}\r\n\t\t\t\t\t\t\t\tname = 'rEmail'\r\n\t\t\t\t\t\t\t\tonChange = { handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Contraseña\"\r\n\t\t\t\t\t\t\t\tvalue={rPassword}\r\n\t\t\t\t\t\t\t\tname = 'rPassword'\r\n\t\t\t\t\t\t\t\tonChange = { handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Repita la contraseña\"\r\n\t\t\t\t\t\t\t\tvalue={rConfirm}\r\n\t\t\t\t\t\t\t\tname = 'rConfirm'\r\n\t\t\t\t\t\t\t\tonChange = { handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName=\"btnSubmit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Crear cuenta\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n   const {name} = useSelector(state => state.auth);\r\n   const dispatch = useDispatch();\r\n\r\n   const handleLogout = () => {\r\n      dispatch(startLogout());\r\n   }\r\n\r\n   return (\r\n      <div className = \"navbar navbar-dark bg-dark mb-4\">\r\n         <span className = 'navbar-brand'>\r\n            {name}\r\n         </span>\r\n         <button className = 'btn btn-danger' onClick = {handleLogout}>\r\n            <i className = 'fas fa-sign-out-alt'></i>\r\n            <span> Salir</span>\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n   return (\r\n      <div>\r\n         <span> {event.title} </span>\r\n         <b> - {event.user.name} </b>\r\n      </div>\r\n   )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => {\r\n   return {\r\n      type: types.uiOpenModal,\r\n   }\r\n}\r\n\r\nexport const uiCloseModal = () => {\r\n   return {\r\n      type: types.uiCloseModal,\r\n   }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {  eventSetNonActive, eventStartAddNew, startEventUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n   content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)'\r\n   }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowplusone = moment().minutes(0).seconds(0).add(2, 'hours');\r\n\r\nexport const CalendarModal = () => {\r\n\r\n   const [dateStart, setDateStart] = useState(now.toDate());\r\n   const [dateEnd, setDateEnd] = useState(nowplusone.toDate());\r\n   const [formValues, setFormValues] = useState({\r\n      title: '',\r\n      notes: '',\r\n      start: now.toDate(),\r\n      end: nowplusone.toDate(),\r\n   });\r\n   const { notes, title, start, end } = formValues;\r\n\r\n\r\n   const { modalOpen } = useSelector(state => state.ui);\r\n   const { activeEvent } = useSelector(state => state.calendar);\r\n   const dispatch = useDispatch();\r\n   useEffect(() => {\r\n      if (activeEvent) {\r\n         setFormValues(activeEvent)\r\n      }\r\n      else{\r\n         setFormValues({\r\n            title: '',\r\n            notes: '',\r\n            start: now.toDate(),\r\n            end: nowplusone.toDate(),\r\n         })\r\n      }\r\n   }, [activeEvent])\r\n\r\n   const handleInputChange = ({ target }) => {\r\n      setFormValues({\r\n         ...formValues,\r\n         [target.name]: target.value,\r\n      })\r\n   }\r\n\r\n\r\n   const closeModal = () => {\r\n      dispatch(uiCloseModal());\r\n      dispatch(eventSetNonActive());\r\n      setFormValues({\r\n         title: '',\r\n         notes: '',\r\n         start: now.toDate(),\r\n         end: nowplusone.toDate(),\r\n      })\r\n   }\r\n\r\n   const handleStartDateChange = (e) => {\r\n      setDateStart(e);\r\n      setFormValues({\r\n         ...formValues,\r\n         start: e,\r\n      })\r\n   }\r\n\r\n   const handleEndDateChange = (e) => {\r\n      setDateEnd(e);\r\n      setFormValues({\r\n         ...formValues,\r\n         end: e,\r\n      })\r\n   }\r\n\r\n   const handleSubmitForm = (e) => {\r\n      e.preventDefault();\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n      if (momentStart.isSameOrAfter(momentEnd)) {\r\n         return Swal.fire('Error', 'End date must be higher', 'error');\r\n      }\r\n\r\n      if (title.trim().length < 2) {\r\n         return Swal.fire('Error', 'The title cannot be empty ', 'error')\r\n      }\r\n\r\n      if (activeEvent) {\r\n         dispatch(startEventUpdate(formValues))\r\n      }\r\n      else {\r\n         dispatch(eventStartAddNew(formValues));\r\n      }\r\n\r\n\r\n      setFormValues({\r\n         title: '',\r\n         notes: '',\r\n         start: now.toDate(),\r\n         end: nowplusone.toDate(),\r\n      })\r\n      closeModal();\r\n\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <Modal\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            contentLabel=\"Example Modal\"\r\n            closeTimeoutMS={200}\r\n         >\r\n            <h1> {\r\n               activeEvent ? 'Update Event' : 'New Event'\r\n               \r\n               } </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n               <div className=\"form-group\">\r\n                  <label>Date and start time</label>\r\n                  <DateTimePicker\r\n                     onChange={handleStartDateChange}\r\n                     value={dateStart}\r\n                     className='form-control'\r\n                  />\r\n               </div>\r\n\r\n               <div className=\"form-group\">\r\n                  <label>Date and end time</label>\r\n                  <DateTimePicker\r\n                     onChange={handleEndDateChange}\r\n                     value={dateEnd}\r\n                     minDate={dateStart}\r\n                     className='form-control'\r\n                  />\r\n               </div>\r\n\r\n               <hr />\r\n               <div className=\"form-group\">\r\n                  <label>Title and notes</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Title of Event\"\r\n                     name=\"title\"\r\n                     autoComplete=\"off\"\r\n                     value={title}\r\n                     onChange={handleInputChange}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">A little description</small>\r\n               </div>\r\n\r\n               <div className=\"form-group\">\r\n                  <textarea\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Notes...\"\r\n                     rows=\"5\"\r\n                     name=\"notes\"\r\n                     value={notes}\r\n                     onChange={handleInputChange}\r\n                  ></textarea>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">Adicional Information</small>\r\n               </div>\r\n\r\n               <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-outline-primary btn-block\"\r\n               >\r\n                  <i className=\"far fa-save\"></i>\r\n                  <span> Save </span>\r\n               </button>\r\n\r\n            </form>\r\n\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventSetNonActive } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const handleClickNew = () => {\r\n      dispatch(eventSetNonActive());\r\n      dispatch(uiOpenModal());\r\n   }\r\n\r\n   return (\r\n      <button\r\n         className = \"btn btn-primary fab\"\r\n         onClick = {handleClickNew}\r\n      >\r\n         <i className = 'fas fa-plus'> </i>\r\n         \r\n      </button>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startDeleteEvent } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const handleDelete = () => {\r\n      dispatch(startDeleteEvent());\r\n      // dispatch(eventSetNonActive());\r\n   }\r\n\r\n   return (\r\n      <button className = 'btn btn-danger fab-danger' onClick = {handleDelete}>\r\n         <i className = 'fa fas-trash'> </i>\r\n         <span> Borrar Evento </span>\r\n      </button>\r\n   )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventSetActive, eventSetNonActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n   const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n   const dispatch = useDispatch();\r\n   const {events, activeEvent} = useSelector(state => state.calendar);\r\n   const {uid} = useSelector(state => state.auth);\r\n\r\n   useEffect(() => {\r\n      dispatch(eventStartLoading())\r\n   }, [dispatch])\r\n\r\n\r\n   const onSelectEvent = (e) =>{\r\n      dispatch(eventSetActive(e));\r\n   }\r\n\r\n   const onDoubleClick = () => {\r\n      dispatch(uiOpenModal());\r\n   }\r\n\r\n   const onViewChange = (e) =>{\r\n      setLastView(e);\r\n      localStorage.setItem('lastView', e)\r\n   }\r\n\r\n   const onSelectedSlot = () => {\r\n      dispatch(eventSetNonActive());\r\n   }\r\n\r\n   const eventStyleGetter = (event, start, end, isSelected) => {\r\n      const style = {\r\n         background: (uid === event.user._id) ? '#fa8231' : '#778ca3',\r\n         // borderRadius: '10px',\r\n         opacity: 0.6,\r\n         display: 'block',\r\n         color: 'white'\r\n      }\r\n      return {\r\n         style\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className='calendar-screen'>\r\n         <Navbar />\r\n         <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            eventPropGetter={eventStyleGetter}\r\n            components={{ event: CalendarEvent }}\r\n            onDoubleClickEvent = {onDoubleClick}\r\n            onSelectEvent = {onSelectEvent}\r\n            onView = {onViewChange}\r\n            view = {lastView}\r\n            onSelectSlot = {onSelectedSlot}\r\n            selectable = {true}\r\n         />\r\n\r\n         <AddNewFab />\r\n\r\n         {\r\n            activeEvent &&\r\n            <DeleteEventFab />}\r\n\r\n         <CalendarModal />\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props)=>{\r\n                return (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : ( <Redirect  to = '/login' /> )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props)=>{\r\n                return (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : ( <Redirect  to = '/' /> )\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated : PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { HashRouter, Switch, Redirect } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n   const dispatch = useDispatch();\r\n   const {checking, uid} = useSelector(state => state.auth)\r\n\r\n   useEffect(() => {\r\n      dispatch(startChecking());\r\n   }, [dispatch])\r\n\r\n   if(checking){\r\n      return <h5> Loading ... </h5>\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <HashRouter>\r\n            <Switch>\r\n               <PublicRoute\r\n                  exact\r\n                  path = '/login'\r\n                  component = {LoginScreen}\r\n                  isAuthenticated = {!!uid}\r\n               />\r\n               <PrivateRoute\r\n                  exact\r\n                  path = '/'\r\n                  component = {CalendarScreen}\r\n                  isAuthenticated = {!!uid}\r\n               />\r\n               <Redirect \r\n                  to= {'/'}\r\n               />\r\n            </Switch>\r\n         </HashRouter>\r\n      </div>\r\n   )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   checking:true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.authLogin:\r\n         return{\r\n            ...state,\r\n            checking: false,\r\n            ...action.payload,\r\n         }\r\n      case types.authCheckingFinish:\r\n         return{\r\n            ...state,\r\n            checking: false,\r\n         }\r\n      case types.authLogout:\r\n         return{\r\n            checking : false,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//    id: 108712871398,\r\n//    title: 'Evento 1',\r\n//    start: moment().toDate(),\r\n//    end: moment().add(2, 'hours').toDate(),\r\n//    notes: 'Comprar cosas',\r\n//    user: {\r\n//       uid: '123',\r\n//       name: 'Jose',\r\n//    }\r\n// },\r\n\r\nconst initialState = {\r\n   events: [],\r\n   activeEvent: null,\r\n\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n      switch (action.type) {\r\n         case types.eventAddNew :\r\n            return {\r\n            ...state,\r\n            events: [...state.events, action.payload]\r\n         }\r\n         case types.eventSetActive:\r\n            return{\r\n               ...state,\r\n               activeEvent: action.payload,\r\n            }\r\n         case types.eventSetNonActive:\r\n            return{\r\n               ...state,\r\n               activeEvent: null,\r\n            }\r\n         case types.eventUpdate:\r\n            return{\r\n               ...state,\r\n               events: state.events.map( e => {\r\n                  if(e.id === action.payload.id){\r\n                     return e = action.payload;\r\n                  }\r\n                  else{\r\n                     return e;\r\n                  }\r\n               })\r\n            }\r\n            case types.eventDelete:\r\n               return{\r\n                  ...state,\r\n                  events: state.events.filter( e => (\r\n                     e.id !== state.activeEvent.id\r\n                  )),\r\n                  activeEvent:null,\r\n               }\r\n            case types.eventLoaded:\r\n               return {\r\n                  ...state,\r\n                  events: [...action.payload]\r\n               }\r\n            case types.eventPurge:\r\n               return{\r\n                  events: [],\r\n                  activeEvent: null,\r\n               }\r\n         default:\r\n            return state;\r\n      }\r\n   \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   modalOpen:false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n   switch (action.type) {\r\n      case types.uiOpenModal:\r\n         return{\r\n            ...state,\r\n            modalOpen:true\r\n         }\r\n      case types.uiCloseModal:\r\n         return{\r\n            ...state,\r\n            modalOpen:false,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n   ui: uiReducer,\r\n   calendar: calendarReducer,\r\n   auth: authReducer,\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n   rootReducer,\r\n   composeEnhancers(\r\n      applyMiddleware( thunk )\r\n   )\r\n);","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n   return (\r\n      <Provider store = {store}>\r\n         <AppRouter />\r\n      </Provider>\r\n   )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}